@using SSH_Configurer_UI.Model;

@if (DeviceStatuses is null)
{
    <br />
    <span>Devices are loading...</span>
    <br />
}
else if (DeviceStatuses.Count == 0)
{
    <br />
    <span>No devices to display</span>
    <br />
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Name</th>
                <th>Hostname</th>
                <th>Status</th>
                <th>Warnings</th>
                <th>Output</th>
                <th>Errors</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var deviceStatus in DeviceStatuses)
            {
               <tr>
                    <td>@deviceStatus.device.Name</td>
                    <td>@deviceStatus.device.Hostname</td>
                    <td>@deviceStatus.statusMessage</td>
                    <td style="padding-left: 20px">
                        <button class="oi oi-eye" @onclick="@(()=>ShowWindow.InvokeAsync(CreateWindow("Warnings  ", string.Join(Environment.NewLine + Environment.NewLine, deviceStatus.warnings))))"></button>
                    </td>
                    <td style="padding-left: 20px">
                        <button class="oi oi-eye" @onclick="@(()=>ShowWindow.InvokeAsync(CreateWindow("Output", deviceStatus.standardOutput)))"></button>
                    </td>
                    <td style="padding-left: 20px">
                        <button class="oi oi-eye" @onclick="@(()=>ShowWindow.InvokeAsync(CreateWindow("Errors", deviceStatus.standardError)))"></button>
                    </td>
               </tr>
            }
        </tbody>
    </table>
}

@code {

    [Parameter]
    public List<DeviceStatus> DeviceStatuses { get; set; }

    [Parameter]
    public EventCallback<LongTextDetails> ShowWindow { get; set; }

    public LongTextDetails CreateWindow(string title, string content)
    {
        LongTextDetails window = new();
        window.HeaderContent = title;
        window.BodyContent = content;

        return window;
    }
}