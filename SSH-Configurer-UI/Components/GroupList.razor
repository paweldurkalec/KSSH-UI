@using SSH_Configurer_UI.Model;

<InfoTopDiv content="@getTopInfo()"></InfoTopDiv>
@if (Groups is null)
{
    <br />
    <span>Groups are loading...</span>
    <br />
}
else if (Groups.Count == 0)
{
    <br />
    <span>No groups to display</span>
    <br />
}
else
{
    <div class="table-responsive">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Assigned Public Key</th>
                    <th>Number of devices</th>
                    <th>Update</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var group in Groups)
                {
                    <tr>
                        <td>@group.Id</td>
                        <td>@group.Name</td>
                        <td>@group.KeyPairId</td>
                        <td>@getNumberOfDevices()</td>
                        <td style="padding-left: 20px">
                            <button class="oi oi-wrench" @onclick="()=>UpdateCurrentGroup.InvokeAsync(group.Id)"></button>
                        </td>
                        <td style="padding-left: 20px">
                            <button class="oi oi-trash" @onclick="()=>DeleteCurrentGroup.InvokeAsync(group)"></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

    [Parameter]
    public List<Group> Groups { get; set; }

    [Parameter]
    public EventCallback<Group> DeleteCurrentGroup { get; set; }

    [Parameter]
    public EventCallback<int> UpdateCurrentGroup { get; set; }

    public int getNumberOfDevices()
    {
        @if (Groups is null)
        {
            return 0;
        }
        return Groups.Count;
    }

    private string getTopInfo()
    {
        return $"List of all groups";
    }
}
