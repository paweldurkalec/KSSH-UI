@using SSH_Configurer_UI.Model;

<InfoTopDiv content="@getTopInfo()"></InfoTopDiv>
@if(Devices is null)
{
    <br />
    <span>Devices are loading...</span>
    <br />
}
else if(Devices.Count == 0)
{
    <br />
    <span>No devices to display</span>
    <br />
}
else{
    <div class="table-responsive">
        <table class="table table-hover table-striped">
            <thead>
                <tr>
                    <th>Id</th>
                    <th>Name</th>
                    <th>Hostname</th>
                    <th>Port</th>
                    <th>Username</th>
                    <th>Assigned Key Id</th>
                    <th>Update</th>
                    <th>Remove</th>
                </tr>
            </thead >
            <tbody>
                @foreach (var device in Devices)
                {
                    <tr>
                        <td>@device.Id</td>
                        <td>@device.Name</td>
                        <td>@device.Hostname</td>
                        <td>@device.Port</td>
                        <td>@device.Username</td>
                        <td>@device.KeyPairId</td>
                        <td style="padding-left: 20px">
                            <button class="oi oi-wrench" @onclick="()=>UpdateCurrentDevice.InvokeAsync(device.Id)"></button>
                        </td>
                        <td style="padding-left: 20px">
                            <button class="oi oi-trash" @onclick="()=>DeleteCurrentDevice.InvokeAsync(device)"></button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@code {

    [Parameter]
    public List<Device> Devices { get; set; }

    [Parameter]
    public EventCallback<Device> DeleteCurrentDevice { get; set; }

    [Parameter]
    public EventCallback<int> UpdateCurrentDevice { get; set; }

    private string getTopInfo()
    {
        return $"List of all devices";
    }
}
