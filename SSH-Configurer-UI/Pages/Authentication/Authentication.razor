@page "/authentication"
@inject NavigationManager navManager;
@inject IAuthenticationService authService;

@code {
    private bool isRegistered = true;
    private bool isLogged = true;

    private async Task CheckRegistrationStatus()
    {
        isRegistered = await authService.CheckIfUserExists();
    }

    private async Task CheckLogin()
    {
        string jwt = await authService.GetJwtAsync();

        isLogged = jwt != null;    
    }

    private void RedirectToLogin()
    {
        navManager.NavigateTo("/login");
    }

    private void RedirectToLogout()
    {
        navManager.NavigateTo("/logout");
    }

    private void RedirectToRegister()
    {
        navManager.NavigateTo("/register");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await CheckRegistrationStatus();
        await CheckLogin();

        if (isRegistered)
        {
            if (isLogged)
            {
                RedirectToLogout();
            }
            else
            {
                RedirectToLogin();
            }
            
        }
        else
        {
            RedirectToRegister();
        }
    }
}

@if (isRegistered)
{
    <p>Loading...</p>
}
