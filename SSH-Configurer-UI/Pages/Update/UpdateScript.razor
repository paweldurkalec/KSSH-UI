@page "/update-script/{scriptId}"
@using SSH_Configurer_UI.Model;
@using SSH_Configurer_UI.Components
@using SSH_Configurer_UI.Services
@inject IContentService<Script> scriptService
@inject IContentService<KeyPair> keyPairService
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms

@if (script is null)
{
    <div style="color: @stateColor">@stateMessage</div>
}
else
{
    <InfoTopDiv content="@getTopInfo()"></InfoTopDiv>
    <AddEditScript script="@script" resetFeedback="@ResetFeedback" saveScript="@SaveScript" color="@color" feedback="@feedback"></AddEditScript>
}

@code {
    [Parameter]
    public string scriptId { get; set; }
    private Script? script = null;
    string feedback = "";
    string color = "";
    string stateMessage = "Loading...";
    string stateColor = "green";

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            script = await scriptService.GetById(int.Parse(scriptId));
            if (script is null)
            {
                stateMessage = "Script not found!";
                stateColor = "red";
            }
            StateHasChanged();
        }
    }

    private async Task SaveScript()
    {
        int response = await scriptService.Update(int.Parse(scriptId), new Script
            {
                Id = script.Id,
                Name = script.Name,
                Content = script.Content,
            });
        if (response == 0)
        {
            script = await scriptService.GetById(int.Parse(scriptId));
            feedback = "Script updated successfully.";
            color = "green";
        }
        else
        {
            feedback = "Updating failed.";
            color = "red";
        }
    }

    private void ResetFeedback()
    {
        feedback = "";
        color = "";
    }

    private string getTopInfo()
    {
        return $"Updating script with id {script.Id}";
    }
}