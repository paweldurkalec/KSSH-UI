@page "/add-group"
@inject IContentService<Group> groupService
@inject IContentService<KeyPair> keyService
@inject IContentService<Device> deviceService

<InfoTopDiv content="@getTopInfo()"></InfoTopDiv>
<AddEditGroup @bind-searchText="@searchText" @bind-searchText:event="ValueChanged" group="@group" searchedDevices="@searchedDevices" resetFeedback="@ResetFeedback" saveDevice="@SaveGroup" keys="@keys" color="@color" feedback="@feedback"></AddEditGroup>

@code {
    private Group group;
    List<KeyPair> keys;
    List<DeviceSelect> devices;
    string searchText = "";
    string deviceIdsString = "";
    string feedback = "";
    string color = "";
    List<DeviceSelect> searchedDevices => devices.Where(device => device.Name.ToLower().Contains(searchText.ToLower())).ToList();

    protected override void OnInitialized()
    {
        base.OnInitialized();
        group = new Group();
        keys = keyService.GetAll().Result.ToList();
        devices = deviceService.GetAll().Result.Select(device => new DeviceSelect(device.Id, device.Name, device.Hostname, isSelected: false)).ToList();
    }

    private void SaveGroup()
    {
        List<int> deviceIds = devices.Where(device => device.IsSelected == true).Select(device => device.Id).ToList();

        int response = groupService.Add(new Group
            {
                Name = group.Name,
                KeyPairId = group.KeyPairId,
                DeviceIds = deviceIds
            }).Result;

        if (response == 0)
        {
            group = new Group();
            devices.ForEach(device => device.IsSelected = false);
            feedback = "Group added successfully.";
            color = "green";
        }
        else
        {
            feedback = "Adding failed.";
            color = "red";
        }
    }

    private void ResetFeedback()
    {
        feedback = "";
        color = "";
    }

    private string getTopInfo()
    {
        return $"Add new group";
    }
}