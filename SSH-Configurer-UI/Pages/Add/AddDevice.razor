@page "/add-device"
@using SSH_Configurer_UI.Model;
@using SSH_Configurer_UI.Components
@using SSH_Configurer_UI.Services
@inject DeviceService deviceService
@inject PublicKeyService keyService
@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Forms


<EditForm Model="@device" OnValidSubmit="@SaveDevice">
    <DataAnnotationsValidator/>
    <div>Name:</div>
    <ValidationMessage For="(() => device.Name)"/>
    <InputText class="form-control" placeholder="Name" @bind-Value="@device.Name"></InputText><br />
    <div>Hostname:</div>
    <ValidationMessage For="(() => device.Hostname)" />
    <InputText class="form-control" placeholder="Hostname" @bind-Value="@device.Hostname"></InputText><br />
    <div>Port:</div>
    <ValidationMessage For="(() => device.Port)" />
    <InputNumber class="form-control" placeholder="Port" @bind-Value="@device.Port"></InputNumber><br />
    <div>User's public key (optional):</div>
    <InputSelect class="form-control" TValue="int" @bind-Value="@device.ServerPubKeyId">
        @if (keys.Count > 0)
        {
            @foreach (var key in keys)
            {
                <option value=@key.Id>@key.Name</option>
            }
        }
        else
        {
            <option value=-1>No keys found!</option>
        }
    </InputSelect><br />
    <div>Password (optional):</div>
    <InputText class="form-control" placeholder="Password" @bind-Value="@device.Password" type="password"></InputText><br />
    <div style="color: @color">@feedback</div><br />
    <button onclick="@ResetFeedback" class="btn btn-primary" type="submit">Save device</button>
</EditForm>

@code {
    private Device device;
    List<PublicKey> keys;
    string feedback = "";
    string color = "";

    protected override void OnInitialized()
    {
        base.OnInitialized();
        device = new Device();
        keys = keyService.GetAllKeys();
    }

    private void SaveDevice()
    {
        int response = deviceService.AddDevice(new Device
            {
                Name = device.Name,
                Hostname = device.Hostname,
                Port = device.Port,
                ServerPubKeyId = device.ServerPubKeyId,
                Password = device.Password
            });
        if(response == 0)
        {
            device = new Device();
            feedback = "Device added successfully.";
            color = "green";
        }
        else
        {
            feedback = "Adding failed.";
            color = "red";
        }
    }

    private void ResetFeedback()
    {   
        feedback = "";
        color = "";    
    }
}
